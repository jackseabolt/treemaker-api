'use strict';var cov_7ncpypbpk=function(){var path='/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/users/model.js',hash='36df588999b2eeeabc024c74493f10d7172c7ccf',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/users/model.js',statementMap:{'0':{start:{line:3,column:17},end:{line:3,column:36}},'1':{start:{line:4,column:15},end:{line:4,column:34}},'2':{start:{line:6,column:0},end:{line:6,column:34}},'3':{start:{line:8,column:19},end:{line:20,column:2}},'4':{start:{line:22,column:0},end:{line:31,column:2}},'5':{start:{line:23,column:4},end:{line:30,column:6}},'6':{start:{line:33,column:0},end:{line:35,column:1}},'7':{start:{line:34,column:4},end:{line:34,column:37}},'8':{start:{line:37,column:0},end:{line:39,column:1}},'9':{start:{line:38,column:4},end:{line:38,column:51}},'10':{start:{line:41,column:13},end:{line:41,column:71}},'11':{start:{line:43,column:0},end:{line:43,column:26}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:22,column:29},end:{line:22,column:30}},loc:{start:{line:22,column:40},end:{line:31,column:1}},line:22},'1':{name:'(anonymous_1)',decl:{start:{line:33,column:34},end:{line:33,column:35}},loc:{start:{line:33,column:48},end:{line:35,column:1}},line:33},'2':{name:'(anonymous_2)',decl:{start:{line:37,column:38},end:{line:37,column:39}},loc:{start:{line:37,column:57},end:{line:39,column:1}},line:37}},branchMap:{'0':{loc:{start:{line:41,column:13},end:{line:41,column:71}},type:'binary-expr',locations:[{start:{line:41,column:13},end:{line:41,column:33}},{start:{line:41,column:37},end:{line:41,column:71}}],line:41}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_7ncpypbpk.s[0]++,require('mongoose'));const bcrypt=(cov_7ncpypbpk.s[1]++,require('bcryptjs'));cov_7ncpypbpk.s[2]++;mongoose.Promsie=global.Promise;const UserSchema=(cov_7ncpypbpk.s[3]++,mongoose.Schema({username:{type:String,required:true,unique:true},password:{type:String,required:true},email:{type:String,required:true},firstName:{type:String},lastName:{type:String},families:[{family_key:{type:String,required:true},family_name:{type:String}}]}));cov_7ncpypbpk.s[4]++;UserSchema.methods.apiRepr=function(){cov_7ncpypbpk.f[0]++;cov_7ncpypbpk.s[5]++;return{id:this._id,firstName:this.firstName,lastName:this.lastName,username:this.username,email:this.email,families:this.families};};cov_7ncpypbpk.s[6]++;UserSchema.methods.hashPassword=password=>{cov_7ncpypbpk.f[1]++;cov_7ncpypbpk.s[7]++;return bcrypt.hash(password,10);};cov_7ncpypbpk.s[8]++;UserSchema.methods.validatePassword=function(password){cov_7ncpypbpk.f[2]++;cov_7ncpypbpk.s[9]++;return bcrypt.compare(password,this.password);};const User=(cov_7ncpypbpk.s[10]++,(cov_7ncpypbpk.b[0][0]++,mongoose.models.User)||(cov_7ncpypbpk.b[0][1]++,mongoose.model('User',UserSchema)));cov_7ncpypbpk.s[11]++;module.exports={User};