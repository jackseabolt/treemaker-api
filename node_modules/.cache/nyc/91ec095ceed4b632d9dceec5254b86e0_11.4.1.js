'use strict';var cov_2zyxfajl4=function(){var path='/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/router.js',hash='96d5502f048bab519ed12e7cf9ed9696dd409603',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/router.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:34}},'1':{start:{line:4,column:19},end:{line:4,column:41}},'2':{start:{line:5,column:19},end:{line:5,column:37}},'3':{start:{line:6,column:15},end:{line:6,column:31}},'4':{start:{line:7,column:19},end:{line:7,column:36}},'5':{start:{line:9,column:0},end:{line:59,column:3}},'6':{start:{line:13,column:27},end:{line:13,column:54}},'7':{start:{line:14,column:25},end:{line:14,column:75}},'8':{start:{line:14,column:54},end:{line:14,column:74}},'9':{start:{line:16,column:4},end:{line:23,column:5}},'10':{start:{line:17,column:8},end:{line:22,column:11}},'11':{start:{line:27,column:25},end:{line:27,column:52}},'12':{start:{line:28,column:27},end:{line:30,column:5}},'13':{start:{line:29,column:17},end:{line:29,column:73}},'14':{start:{line:32,column:4},end:{line:39,column:5}},'15':{start:{line:33,column:8},end:{line:38,column:11}},'16':{start:{line:43,column:26},end:{line:43,column:53}},'17':{start:{line:44,column:28},end:{line:46,column:5}},'18':{start:{line:45,column:17},end:{line:45,column:59}},'19':{start:{line:48,column:4},end:{line:55,column:5}},'20':{start:{line:49,column:8},end:{line:54,column:11}},'21':{start:{line:62,column:0},end:{line:62,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:9,column:29},end:{line:9,column:30}},loc:{start:{line:9,column:43},end:{line:59,column:1}},line:9},'1':{name:'(anonymous_1)',decl:{start:{line:14,column:45},end:{line:14,column:46}},loc:{start:{line:14,column:54},end:{line:14,column:74}},line:14},'2':{name:'(anonymous_2)',decl:{start:{line:29,column:8},end:{line:29,column:9}},loc:{start:{line:29,column:17},end:{line:29,column:73}},line:29},'3':{name:'(anonymous_3)',decl:{start:{line:45,column:8},end:{line:45,column:9}},loc:{start:{line:45,column:17},end:{line:45,column:59}},line:45}},branchMap:{'0':{loc:{start:{line:16,column:4},end:{line:23,column:5}},type:'if',locations:[{start:{line:16,column:4},end:{line:23,column:5}},{start:{line:16,column:4},end:{line:23,column:5}}],line:16},'1':{loc:{start:{line:29,column:17},end:{line:29,column:73}},type:'binary-expr',locations:[{start:{line:29,column:17},end:{line:29,column:34}},{start:{line:29,column:38},end:{line:29,column:73}}],line:29},'2':{loc:{start:{line:32,column:4},end:{line:39,column:5}},type:'if',locations:[{start:{line:32,column:4},end:{line:39,column:5}},{start:{line:32,column:4},end:{line:39,column:5}}],line:32},'3':{loc:{start:{line:48,column:4},end:{line:55,column:5}},type:'if',locations:[{start:{line:48,column:4},end:{line:55,column:5}},{start:{line:48,column:4},end:{line:55,column:5}}],line:48}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0},f:{'0':0,'1':0,'2':0,'3':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_2zyxfajl4.s[0]++,require('express'));const bodyParser=(cov_2zyxfajl4.s[1]++,require('body-parser'));const{Family}=(cov_2zyxfajl4.s[2]++,require('./model'));const router=(cov_2zyxfajl4.s[3]++,express.Router());const jsonParser=(cov_2zyxfajl4.s[4]++,bodyParser.json());cov_2zyxfajl4.s[5]++;router.post('/',jsonParser,(req,res)=>{cov_2zyxfajl4.f[0]++;// checking that required fields are present
const requiredFields=(cov_2zyxfajl4.s[6]++,['family_name','password']);const missingField=(cov_2zyxfajl4.s[7]++,requiredFields.find(field=>{cov_2zyxfajl4.f[1]++;cov_2zyxfajl4.s[8]++;return!(field in req.body);}));cov_2zyxfajl4.s[9]++;if(missingField){cov_2zyxfajl4.b[0][0]++;cov_2zyxfajl4.s[10]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Missing field',location:missingField});}else{cov_2zyxfajl4.b[0][1]++;}// checking the format of string fields 
const stringFields=(cov_2zyxfajl4.s[11]++,['family_name','password']);const nonStringField=(cov_2zyxfajl4.s[12]++,stringFields.find(field=>{cov_2zyxfajl4.f[2]++;cov_2zyxfajl4.s[13]++;return(cov_2zyxfajl4.b[1][0]++,field in req.body)&&(cov_2zyxfajl4.b[1][1]++,typeof req.body[field]!=='string');}));cov_2zyxfajl4.s[14]++;if(nonStringField){cov_2zyxfajl4.b[2][0]++;cov_2zyxfajl4.s[15]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Incorrect field type: expected string',location:nonStringField});}else{cov_2zyxfajl4.b[2][1]++;}// checking the trimming on fields 
const trimmedFields=(cov_2zyxfajl4.s[16]++,['family_name','password']);const nonTrimmedField=(cov_2zyxfajl4.s[17]++,trimmedFields.find(field=>{cov_2zyxfajl4.f[3]++;cov_2zyxfajl4.s[18]++;return req.body[field].trim()!==req.body[field];}));cov_2zyxfajl4.s[19]++;if(nonTrimmedField){cov_2zyxfajl4.b[3][0]++;cov_2zyxfajl4.s[20]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Cannot start or end with whitespace',location:nonTrimmedField});}else{cov_2zyxfajl4.b[3][1]++;}});cov_2zyxfajl4.s[21]++;module.exports={router};