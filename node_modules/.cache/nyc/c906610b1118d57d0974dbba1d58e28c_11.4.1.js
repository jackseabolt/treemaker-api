'use strict';var cov_e7rxf9ifl=function(){var path='/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/model.js',hash='7e03b4929524d2a1c0bf66c6771ee082e2dc8246',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/model.js',statementMap:{'0':{start:{line:3,column:17},end:{line:3,column:36}},'1':{start:{line:4,column:15},end:{line:4,column:34}},'2':{start:{line:6,column:21},end:{line:46,column:2}},'3':{start:{line:48,column:0},end:{line:54,column:1}},'4':{start:{line:49,column:4},end:{line:53,column:5}},'5':{start:{line:56,column:0},end:{line:58,column:1}},'6':{start:{line:57,column:4},end:{line:57,column:37}},'7':{start:{line:60,column:0},end:{line:62,column:1}},'8':{start:{line:61,column:4},end:{line:61,column:51}},'9':{start:{line:64,column:15},end:{line:64,column:79}},'10':{start:{line:66,column:0},end:{line:66,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:48,column:31},end:{line:48,column:32}},loc:{start:{line:48,column:42},end:{line:54,column:1}},line:48},'1':{name:'(anonymous_1)',decl:{start:{line:56,column:36},end:{line:56,column:37}},loc:{start:{line:56,column:55},end:{line:58,column:1}},line:56},'2':{name:'(anonymous_2)',decl:{start:{line:60,column:40},end:{line:60,column:41}},loc:{start:{line:60,column:59},end:{line:62,column:1}},line:60}},branchMap:{'0':{loc:{start:{line:64,column:15},end:{line:64,column:79}},type:'binary-expr',locations:[{start:{line:64,column:15},end:{line:64,column:37}},{start:{line:64,column:41},end:{line:64,column:79}}],line:64}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_e7rxf9ifl.s[0]++,require('mongoose'));const bcrypt=(cov_e7rxf9ifl.s[1]++,require('bcryptjs'));const FamilySchema=(cov_e7rxf9ifl.s[2]++,mongoose.Schema({username:{type:String,required:true,unique:true},family_name:{type:String,required:true},password:{type:String,required:true},members:[{fname:{type:String,required:true},lname:{type:String,required:true},mname:{type:String},birth_date:{type:String},birth_town:{type:String},birth_state:{type:String},death_date:{type:String},death_town:{type:String},death_state:{type:String},short_bio:{type:String},long_bio:{type:String},parents:[{id:{type:String,required:true,unique:true}}],siblings:[{id:{type:String,required:true,unique:true}}],children:[{id:{type:String,required:true,unique:true}}],pictures:[{url:{type:String,required:true,unique:true}}]}]}));cov_e7rxf9ifl.s[3]++;FamilySchema.methods.apiRepr=function(){cov_e7rxf9ifl.f[0]++;cov_e7rxf9ifl.s[4]++;return{username:this.username,family_name:this.family_name,members:this.members};};cov_e7rxf9ifl.s[5]++;FamilySchema.statics.hashPassword=function(password){cov_e7rxf9ifl.f[1]++;cov_e7rxf9ifl.s[6]++;return bcrypt.hash(password,10);};cov_e7rxf9ifl.s[7]++;FamilySchema.methods.validatePassword=function(password){cov_e7rxf9ifl.f[2]++;cov_e7rxf9ifl.s[8]++;return bcrypt.compare(password,this.password);};const Family=(cov_e7rxf9ifl.s[9]++,(cov_e7rxf9ifl.b[0][0]++,mongoose.models.Family)||(cov_e7rxf9ifl.b[0][1]++,mongoose.model('Family',FamilySchema)));cov_e7rxf9ifl.s[10]++;module.exports={Family};