'use strict';var cov_31bxf2i15=function(){var path='/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/users/router.js',hash='86f6fc863b9dc7875c3f5fcf4a1237a1ec36005e',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/users/router.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:34}},'1':{start:{line:4,column:19},end:{line:4,column:41}},'2':{start:{line:5,column:17},end:{line:5,column:35}},'3':{start:{line:6,column:15},end:{line:6,column:31}},'4':{start:{line:7,column:19},end:{line:7,column:36}},'5':{start:{line:9,column:0},end:{line:11,column:2}},'6':{start:{line:10,column:4},end:{line:10,column:46}},'7':{start:{line:13,column:0},end:{line:105,column:5}},'8':{start:{line:14,column:27},end:{line:14,column:51}},'9':{start:{line:15,column:25},end:{line:15,column:75}},'10':{start:{line:15,column:54},end:{line:15,column:74}},'11':{start:{line:17,column:4},end:{line:24,column:5}},'12':{start:{line:18,column:6},end:{line:23,column:9}},'13':{start:{line:26,column:25},end:{line:26,column:49}},'14':{start:{line:27,column:27},end:{line:29,column:5}},'15':{start:{line:28,column:15},end:{line:28,column:71}},'16':{start:{line:31,column:4},end:{line:38,column:5}},'17':{start:{line:32,column:6},end:{line:37,column:9}},'18':{start:{line:40,column:35},end:{line:40,column:59}},'19':{start:{line:41,column:28},end:{line:43,column:5}},'20':{start:{line:42,column:15},end:{line:42,column:57}},'21':{start:{line:45,column:4},end:{line:52,column:5}},'22':{start:{line:46,column:6},end:{line:51,column:9}},'23':{start:{line:54,column:24},end:{line:57,column:5}},'24':{start:{line:58,column:26},end:{line:61,column:5}},'25':{start:{line:59,column:6},end:{line:60,column:60}},'26':{start:{line:62,column:26},end:{line:65,column:5}},'27':{start:{line:63,column:6},end:{line:64,column:60}},'28':{start:{line:67,column:4},end:{line:76,column:5}},'29':{start:{line:68,column:6},end:{line:75,column:9}},'30':{start:{line:78,column:33},end:{line:78,column:41}},'31':{start:{line:80,column:4},end:{line:104,column:9}},'32':{start:{line:83,column:8},end:{line:90,column:9}},'33':{start:{line:84,column:10},end:{line:89,column:13}},'34':{start:{line:91,column:8},end:{line:91,column:43}},'35':{start:{line:94,column:8},end:{line:94,column:57}},'36':{start:{line:97,column:8},end:{line:97,column:52}},'37':{start:{line:100,column:8},end:{line:102,column:9}},'38':{start:{line:101,column:10},end:{line:101,column:48}},'39':{start:{line:103,column:8},end:{line:103,column:78}},'40':{start:{line:107,column:0},end:{line:107,column:27}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:9,column:16},end:{line:9,column:17}},loc:{start:{line:9,column:30},end:{line:11,column:1}},line:9},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:29},end:{line:13,column:30}},loc:{start:{line:13,column:43},end:{line:105,column:3}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:15,column:45},end:{line:15,column:46}},loc:{start:{line:15,column:54},end:{line:15,column:74}},line:15},'3':{name:'(anonymous_3)',decl:{start:{line:28,column:6},end:{line:28,column:7}},loc:{start:{line:28,column:15},end:{line:28,column:71}},line:28},'4':{name:'(anonymous_4)',decl:{start:{line:42,column:6},end:{line:42,column:7}},loc:{start:{line:42,column:15},end:{line:42,column:57}},line:42},'5':{name:'(anonymous_5)',decl:{start:{line:58,column:56},end:{line:58,column:57}},loc:{start:{line:59,column:6},end:{line:60,column:60}},line:59},'6':{name:'(anonymous_6)',decl:{start:{line:62,column:56},end:{line:62,column:57}},loc:{start:{line:63,column:6},end:{line:64,column:60}},line:63},'7':{name:'(anonymous_7)',decl:{start:{line:82,column:12},end:{line:82,column:13}},loc:{start:{line:82,column:21},end:{line:92,column:7}},line:82},'8':{name:'(anonymous_8)',decl:{start:{line:93,column:12},end:{line:93,column:13}},loc:{start:{line:93,column:20},end:{line:95,column:7}},line:93},'9':{name:'(anonymous_9)',decl:{start:{line:96,column:12},end:{line:96,column:13}},loc:{start:{line:96,column:20},end:{line:98,column:7}},line:96},'10':{name:'(anonymous_10)',decl:{start:{line:99,column:13},end:{line:99,column:14}},loc:{start:{line:99,column:20},end:{line:104,column:7}},line:99}},branchMap:{'0':{loc:{start:{line:17,column:4},end:{line:24,column:5}},type:'if',locations:[{start:{line:17,column:4},end:{line:24,column:5}},{start:{line:17,column:4},end:{line:24,column:5}}],line:17},'1':{loc:{start:{line:28,column:15},end:{line:28,column:71}},type:'binary-expr',locations:[{start:{line:28,column:15},end:{line:28,column:32}},{start:{line:28,column:36},end:{line:28,column:71}}],line:28},'2':{loc:{start:{line:31,column:4},end:{line:38,column:5}},type:'if',locations:[{start:{line:31,column:4},end:{line:38,column:5}},{start:{line:31,column:4},end:{line:38,column:5}}],line:31},'3':{loc:{start:{line:45,column:4},end:{line:52,column:5}},type:'if',locations:[{start:{line:45,column:4},end:{line:52,column:5}},{start:{line:45,column:4},end:{line:52,column:5}}],line:45},'4':{loc:{start:{line:59,column:6},end:{line:60,column:60}},type:'binary-expr',locations:[{start:{line:59,column:6},end:{line:59,column:33}},{start:{line:60,column:6},end:{line:60,column:60}}],line:59},'5':{loc:{start:{line:63,column:6},end:{line:64,column:60}},type:'binary-expr',locations:[{start:{line:63,column:6},end:{line:63,column:33}},{start:{line:64,column:6},end:{line:64,column:60}}],line:63},'6':{loc:{start:{line:67,column:4},end:{line:76,column:5}},type:'if',locations:[{start:{line:67,column:4},end:{line:76,column:5}},{start:{line:67,column:4},end:{line:76,column:5}}],line:67},'7':{loc:{start:{line:67,column:8},end:{line:67,column:38}},type:'binary-expr',locations:[{start:{line:67,column:8},end:{line:67,column:21}},{start:{line:67,column:25},end:{line:67,column:38}}],line:67},'8':{loc:{start:{line:71,column:17},end:{line:73,column:79}},type:'cond-expr',locations:[{start:{line:72,column:12},end:{line:72,column:80}},{start:{line:73,column:12},end:{line:73,column:79}}],line:71},'9':{loc:{start:{line:74,column:18},end:{line:74,column:48}},type:'binary-expr',locations:[{start:{line:74,column:18},end:{line:74,column:31}},{start:{line:74,column:35},end:{line:74,column:48}}],line:74},'10':{loc:{start:{line:83,column:8},end:{line:90,column:9}},type:'if',locations:[{start:{line:83,column:8},end:{line:90,column:9}},{start:{line:83,column:8},end:{line:90,column:9}}],line:83},'11':{loc:{start:{line:100,column:8},end:{line:102,column:9}},type:'if',locations:[{start:{line:100,column:8},end:{line:102,column:9}},{start:{line:100,column:8},end:{line:102,column:9}}],line:100}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_31bxf2i15.s[0]++,require('express'));const bodyParser=(cov_31bxf2i15.s[1]++,require('body-parser'));const{User}=(cov_31bxf2i15.s[2]++,require('./model'));const router=(cov_31bxf2i15.s[3]++,express.Router());const jsonParser=(cov_31bxf2i15.s[4]++,bodyParser.json());cov_31bxf2i15.s[5]++;router.get('/',(req,res)=>{cov_31bxf2i15.f[0]++;cov_31bxf2i15.s[6]++;return res.json({data:'ROUTER SUCCESS'});});cov_31bxf2i15.s[7]++;router.post('/',jsonParser,(req,res)=>{cov_31bxf2i15.f[1]++;const requiredFields=(cov_31bxf2i15.s[8]++,['username','password']);const missingField=(cov_31bxf2i15.s[9]++,requiredFields.find(field=>{cov_31bxf2i15.f[2]++;cov_31bxf2i15.s[10]++;return!(field in req.body);}));cov_31bxf2i15.s[11]++;if(missingField){cov_31bxf2i15.b[0][0]++;cov_31bxf2i15.s[12]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Missing field',location:missingField});}else{cov_31bxf2i15.b[0][1]++;}const stringFields=(cov_31bxf2i15.s[13]++,['username','password']);const nonStringField=(cov_31bxf2i15.s[14]++,stringFields.find(field=>{cov_31bxf2i15.f[3]++;cov_31bxf2i15.s[15]++;return(cov_31bxf2i15.b[1][0]++,field in req.body)&&(cov_31bxf2i15.b[1][1]++,typeof req.body[field]!=='string');}));cov_31bxf2i15.s[16]++;if(nonStringField){cov_31bxf2i15.b[2][0]++;cov_31bxf2i15.s[17]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Incorrect field type: expected string',location:nonStringField});}else{cov_31bxf2i15.b[2][1]++;}const explicityTrimmedFields=(cov_31bxf2i15.s[18]++,['username','password']);const nonTrimmedField=(cov_31bxf2i15.s[19]++,explicityTrimmedFields.find(field=>{cov_31bxf2i15.f[4]++;cov_31bxf2i15.s[20]++;return req.body[field].trim()!==req.body[field];}));cov_31bxf2i15.s[21]++;if(nonTrimmedField){cov_31bxf2i15.b[3][0]++;cov_31bxf2i15.s[22]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Cannot start or end with whitespace',location:nonTrimmedField});}else{cov_31bxf2i15.b[3][1]++;}const sizedFields=(cov_31bxf2i15.s[23]++,{username:{min:1},password:{min:10,max:72}});const tooSmallField=(cov_31bxf2i15.s[24]++,Object.keys(sizedFields).find(field=>{cov_31bxf2i15.f[5]++;cov_31bxf2i15.s[25]++;return(cov_31bxf2i15.b[4][0]++,'min'in sizedFields[field])&&(cov_31bxf2i15.b[4][1]++,req.body[field].trim().length<sizedFields[field].min);}));const tooLargeField=(cov_31bxf2i15.s[26]++,Object.keys(sizedFields).find(field=>{cov_31bxf2i15.f[6]++;cov_31bxf2i15.s[27]++;return(cov_31bxf2i15.b[5][0]++,'max'in sizedFields[field])&&(cov_31bxf2i15.b[5][1]++,req.body[field].trim().length>sizedFields[field].max);}));cov_31bxf2i15.s[28]++;if((cov_31bxf2i15.b[7][0]++,tooSmallField)||(cov_31bxf2i15.b[7][1]++,tooLargeField)){cov_31bxf2i15.b[6][0]++;cov_31bxf2i15.s[29]++;return res.status(422).json({code:422,reason:'ValidationError',message:tooSmallField?(cov_31bxf2i15.b[8][0]++,`Must be at least ${sizedFields[tooSmallField].min} characters long`):(cov_31bxf2i15.b[8][1]++,`Must be at most ${sizedFields[tooLargeField].max} characters long`),location:(cov_31bxf2i15.b[9][0]++,tooSmallField)||(cov_31bxf2i15.b[9][1]++,tooLargeField)});}else{cov_31bxf2i15.b[6][1]++;}let{username,password}=(cov_31bxf2i15.s[30]++,req.body);cov_31bxf2i15.s[31]++;return User.find({username}).count().then(count=>{cov_31bxf2i15.f[7]++;cov_31bxf2i15.s[32]++;if(count>0){cov_31bxf2i15.b[10][0]++;cov_31bxf2i15.s[33]++;return Promise.reject({code:422,reason:'ValidationError',message:'Username already taken',location:'username'});}else{cov_31bxf2i15.b[10][1]++;}cov_31bxf2i15.s[34]++;return User.hashPassword(password);}).then(hash=>{cov_31bxf2i15.f[8]++;cov_31bxf2i15.s[35]++;return User.create({username,password:hash});}).then(user=>{cov_31bxf2i15.f[9]++;cov_31bxf2i15.s[36]++;return res.status(201).json(user.apiRepr());}).catch(err=>{cov_31bxf2i15.f[10]++;cov_31bxf2i15.s[37]++;if(err.reason==='ValidationError'){cov_31bxf2i15.b[11][0]++;cov_31bxf2i15.s[38]++;return res.status(err.code).json(err);}else{cov_31bxf2i15.b[11][1]++;}cov_31bxf2i15.s[39]++;res.status(500).json({code:500,message:'Internal server error'});});});cov_31bxf2i15.s[40]++;module.exports={router};