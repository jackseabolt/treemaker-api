'use strict';var cov_2zyxfajl4=function(){var path='/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/router.js',hash='6b95a1a671518539ef0464163a97c74c32dbd295',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/johnseabolt/Desktop/code/JAVASCRIPT/KEEPERS/treemaker/treemaker-api/families/router.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:34}},'1':{start:{line:4,column:19},end:{line:4,column:41}},'2':{start:{line:5,column:19},end:{line:5,column:37}},'3':{start:{line:6,column:17},end:{line:6,column:42}},'4':{start:{line:7,column:15},end:{line:7,column:31}},'5':{start:{line:8,column:19},end:{line:8,column:36}},'6':{start:{line:10,column:0},end:{line:142,column:3}},'7':{start:{line:35,column:27},end:{line:35,column:66}},'8':{start:{line:36,column:25},end:{line:36,column:75}},'9':{start:{line:36,column:54},end:{line:36,column:74}},'10':{start:{line:38,column:4},end:{line:45,column:5}},'11':{start:{line:39,column:8},end:{line:44,column:11}},'12':{start:{line:49,column:25},end:{line:49,column:64}},'13':{start:{line:50,column:27},end:{line:52,column:5}},'14':{start:{line:51,column:17},end:{line:51,column:73}},'15':{start:{line:54,column:4},end:{line:61,column:5}},'16':{start:{line:55,column:8},end:{line:60,column:11}},'17':{start:{line:65,column:26},end:{line:65,column:65}},'18':{start:{line:66,column:28},end:{line:68,column:5}},'19':{start:{line:67,column:17},end:{line:67,column:59}},'20':{start:{line:70,column:4},end:{line:77,column:5}},'21':{start:{line:71,column:8},end:{line:76,column:11}},'22':{start:{line:81,column:24},end:{line:85,column:5}},'23':{start:{line:87,column:26},end:{line:90,column:5}},'24':{start:{line:88,column:8},end:{line:89,column:62}},'25':{start:{line:92,column:26},end:{line:95,column:5}},'26':{start:{line:93,column:8},end:{line:94,column:62}},'27':{start:{line:97,column:4},end:{line:106,column:5}},'28':{start:{line:98,column:8},end:{line:105,column:10}},'29':{start:{line:110,column:46},end:{line:110,column:54}},'30':{start:{line:111,column:4},end:{line:141,column:11}},'31':{start:{line:114,column:12},end:{line:121,column:13}},'32':{start:{line:115,column:16},end:{line:120,column:19}},'33':{start:{line:125,column:12},end:{line:125,column:49}},'34':{start:{line:128,column:12},end:{line:133,column:14}},'35':{start:{line:136,column:12},end:{line:136,column:58}},'36':{start:{line:139,column:12},end:{line:139,column:31}},'37':{start:{line:140,column:12},end:{line:140,column:129}},'38':{start:{line:145,column:0},end:{line:145,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:29},end:{line:10,column:30}},loc:{start:{line:10,column:43},end:{line:142,column:1}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:36,column:45},end:{line:36,column:46}},loc:{start:{line:36,column:54},end:{line:36,column:74}},line:36},'2':{name:'(anonymous_2)',decl:{start:{line:51,column:8},end:{line:51,column:9}},loc:{start:{line:51,column:17},end:{line:51,column:73}},line:51},'3':{name:'(anonymous_3)',decl:{start:{line:67,column:8},end:{line:67,column:9}},loc:{start:{line:67,column:17},end:{line:67,column:59}},line:67},'4':{name:'(anonymous_4)',decl:{start:{line:87,column:56},end:{line:87,column:57}},loc:{start:{line:88,column:8},end:{line:89,column:62}},line:88},'5':{name:'(anonymous_5)',decl:{start:{line:92,column:56},end:{line:92,column:57}},loc:{start:{line:93,column:8},end:{line:94,column:62}},line:93},'6':{name:'(anonymous_6)',decl:{start:{line:113,column:14},end:{line:113,column:15}},loc:{start:{line:113,column:23},end:{line:126,column:9}},line:113},'7':{name:'(anonymous_7)',decl:{start:{line:127,column:14},end:{line:127,column:15}},loc:{start:{line:127,column:22},end:{line:134,column:9}},line:127},'8':{name:'(anonymous_8)',decl:{start:{line:135,column:14},end:{line:135,column:15}},loc:{start:{line:135,column:24},end:{line:137,column:9}},line:135},'9':{name:'(anonymous_9)',decl:{start:{line:138,column:15},end:{line:138,column:16}},loc:{start:{line:138,column:22},end:{line:141,column:9}},line:138}},branchMap:{'0':{loc:{start:{line:38,column:4},end:{line:45,column:5}},type:'if',locations:[{start:{line:38,column:4},end:{line:45,column:5}},{start:{line:38,column:4},end:{line:45,column:5}}],line:38},'1':{loc:{start:{line:51,column:17},end:{line:51,column:73}},type:'binary-expr',locations:[{start:{line:51,column:17},end:{line:51,column:34}},{start:{line:51,column:38},end:{line:51,column:73}}],line:51},'2':{loc:{start:{line:54,column:4},end:{line:61,column:5}},type:'if',locations:[{start:{line:54,column:4},end:{line:61,column:5}},{start:{line:54,column:4},end:{line:61,column:5}}],line:54},'3':{loc:{start:{line:70,column:4},end:{line:77,column:5}},type:'if',locations:[{start:{line:70,column:4},end:{line:77,column:5}},{start:{line:70,column:4},end:{line:77,column:5}}],line:70},'4':{loc:{start:{line:88,column:8},end:{line:89,column:62}},type:'binary-expr',locations:[{start:{line:88,column:8},end:{line:88,column:35}},{start:{line:89,column:8},end:{line:89,column:62}}],line:88},'5':{loc:{start:{line:93,column:8},end:{line:94,column:62}},type:'binary-expr',locations:[{start:{line:93,column:8},end:{line:93,column:35}},{start:{line:94,column:8},end:{line:94,column:62}}],line:93},'6':{loc:{start:{line:97,column:4},end:{line:106,column:5}},type:'if',locations:[{start:{line:97,column:4},end:{line:106,column:5}},{start:{line:97,column:4},end:{line:106,column:5}}],line:97},'7':{loc:{start:{line:97,column:9},end:{line:97,column:39}},type:'binary-expr',locations:[{start:{line:97,column:9},end:{line:97,column:22}},{start:{line:97,column:26},end:{line:97,column:39}}],line:97},'8':{loc:{start:{line:101,column:21},end:{line:103,column:81}},type:'cond-expr',locations:[{start:{line:102,column:14},end:{line:102,column:82}},{start:{line:103,column:14},end:{line:103,column:81}}],line:101},'9':{loc:{start:{line:104,column:22},end:{line:104,column:52}},type:'binary-expr',locations:[{start:{line:104,column:22},end:{line:104,column:35}},{start:{line:104,column:39},end:{line:104,column:52}}],line:104},'10':{loc:{start:{line:114,column:12},end:{line:121,column:13}},type:'if',locations:[{start:{line:114,column:12},end:{line:121,column:13}},{start:{line:114,column:12},end:{line:121,column:13}}],line:114}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_2zyxfajl4.s[0]++,require('express'));const bodyParser=(cov_2zyxfajl4.s[1]++,require('body-parser'));const{Family}=(cov_2zyxfajl4.s[2]++,require('./model'));const{User}=(cov_2zyxfajl4.s[3]++,require('../users/model'));const router=(cov_2zyxfajl4.s[4]++,express.Router());const jsonParser=(cov_2zyxfajl4.s[5]++,bodyParser.json());cov_2zyxfajl4.s[6]++;router.post('/',jsonParser,(req,res)=>{cov_2zyxfajl4.f[0]++;// checking that given id is valid
// let { id } = req.body; 
// User.findById({ id })
//     .count()
//     .then(count => {
//         if (count < 1) {
//             return Promise.reject({
//                 code: 422, 
//                 reason: 'Validation Error', 
//                 message: 'Family must be created by a user', 
//                 location: 'id'
//             })
//         } 
//     })
//     .catch(err => {
//         return res.status(err.code).json({code: err.code, message: err.message, reason: err.reason, location: err.location })
//     }); 
// checking that required fields are present
const requiredFields=(cov_2zyxfajl4.s[7]++,['family_name','username','password']);const missingField=(cov_2zyxfajl4.s[8]++,requiredFields.find(field=>{cov_2zyxfajl4.f[1]++;cov_2zyxfajl4.s[9]++;return!(field in req.body);}));cov_2zyxfajl4.s[10]++;if(missingField){cov_2zyxfajl4.b[0][0]++;cov_2zyxfajl4.s[11]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Missing field',location:missingField});}else{cov_2zyxfajl4.b[0][1]++;}// checking the format of string fields 
const stringFields=(cov_2zyxfajl4.s[12]++,['family_name','password','username']);const nonStringField=(cov_2zyxfajl4.s[13]++,stringFields.find(field=>{cov_2zyxfajl4.f[2]++;cov_2zyxfajl4.s[14]++;return(cov_2zyxfajl4.b[1][0]++,field in req.body)&&(cov_2zyxfajl4.b[1][1]++,typeof req.body[field]!=='string');}));cov_2zyxfajl4.s[15]++;if(nonStringField){cov_2zyxfajl4.b[2][0]++;cov_2zyxfajl4.s[16]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Incorrect field type: expected string',location:nonStringField});}else{cov_2zyxfajl4.b[2][1]++;}// checking the trimming on fields 
const trimmedFields=(cov_2zyxfajl4.s[17]++,['family_name','password','username']);const nonTrimmedField=(cov_2zyxfajl4.s[18]++,trimmedFields.find(field=>{cov_2zyxfajl4.f[3]++;cov_2zyxfajl4.s[19]++;return req.body[field].trim()!==req.body[field];}));cov_2zyxfajl4.s[20]++;if(nonTrimmedField){cov_2zyxfajl4.b[3][0]++;cov_2zyxfajl4.s[21]++;return res.status(422).json({code:422,reason:'Validation Error',message:'Cannot start or end with whitespace',location:nonTrimmedField});}else{cov_2zyxfajl4.b[3][1]++;}// checking the length of fields 
const sizedFields=(cov_2zyxfajl4.s[22]++,{family_name:{min:1},password:{min:10,max:72},username:{min:10,max:72}});const tooSmallField=(cov_2zyxfajl4.s[23]++,Object.keys(sizedFields).find(field=>{cov_2zyxfajl4.f[4]++;cov_2zyxfajl4.s[24]++;return(cov_2zyxfajl4.b[4][0]++,'min'in sizedFields[field])&&(cov_2zyxfajl4.b[4][1]++,req.body[field].trim().length<sizedFields[field].min);}));const tooLargeField=(cov_2zyxfajl4.s[25]++,Object.keys(sizedFields).find(field=>{cov_2zyxfajl4.f[5]++;cov_2zyxfajl4.s[26]++;return(cov_2zyxfajl4.b[5][0]++,'max'in sizedFields[field])&&(cov_2zyxfajl4.b[5][1]++,req.body[field].trim().length<sizedFields[field].min);}));cov_2zyxfajl4.s[27]++;if((cov_2zyxfajl4.b[7][0]++,tooSmallField)||(cov_2zyxfajl4.b[7][1]++,tooLargeField)){cov_2zyxfajl4.b[6][0]++;cov_2zyxfajl4.s[28]++;return res.status(422).json({code:422,reason:'Validation Error',message:tooSmallField?(cov_2zyxfajl4.b[8][0]++,`Must be at least ${sizedFields[tooSmallField].min} characters long`):(cov_2zyxfajl4.b[8][1]++,`Must be at most ${sizedFields[tooLargeField].max} characters long`),location:(cov_2zyxfajl4.b[9][0]++,tooSmallField)||(cov_2zyxfajl4.b[9][1]++,tooLargeField)});}else{cov_2zyxfajl4.b[6][1]++;}// checking existance of family with same username
let{family_name,password,username}=(cov_2zyxfajl4.s[29]++,req.body);cov_2zyxfajl4.s[30]++;return Family.find({username}).count().then(count=>{cov_2zyxfajl4.f[6]++;cov_2zyxfajl4.s[31]++;if(count>0){cov_2zyxfajl4.b[10][0]++;cov_2zyxfajl4.s[32]++;return Promise.reject({code:422,reason:'Validation Error',message:'Username already taken',location:'username'});}else{cov_2zyxfajl4.b[10][1]++;}// creating fmaily
cov_2zyxfajl4.s[33]++;return Family.hashPassword(password);}).then(hash=>{cov_2zyxfajl4.f[7]++;cov_2zyxfajl4.s[34]++;return Family.create({username,family_name,password:hash,members:[]});}).then(family=>{cov_2zyxfajl4.f[8]++;cov_2zyxfajl4.s[35]++;return res.status(201).json(family.apiRepr());}).catch(err=>{cov_2zyxfajl4.f[9]++;cov_2zyxfajl4.s[36]++;console.error(err);cov_2zyxfajl4.s[37]++;return res.status(err.code).json({code:err.code,message:err.message,reason:err.reason,location:err.location});});});cov_2zyxfajl4.s[38]++;module.exports={router};